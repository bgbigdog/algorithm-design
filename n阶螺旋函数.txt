#include <iostream>
using namespace std;

void inputArrary(int,int,int,int *,int);
void printfArray(int *,int);

int cn;
int main()
{
	int n;
	while (1)
	{
		cin>>n;
		cn=n;
		int *p = new int[n*n];
		int count=1;
		if(n==0)
		{
			break;
		}
		else
		{
			inputArrary(n,n,3,p,count);//1代表向上，2代表向左，3代表向右，4代表向下	
		}

		printfArray(p,n);
		delete(p);
		
	}
	
}

void printfArray(int *p,int n)
{
	for(int i=0;i<n;i++)
	{
		for (int j = 0; j < n; j++)
		{
			int *p1=p+i*n+j;
			printf("%d ",*(p+i*n+j));
		}
		printf("\n");
		
	}

}

void inputArrary(int n,int m,int direction,int *p,int count)//n列m行
{
	//拐弯的表示

	if(n==1&&m==1)
	{
		*p=count;
		return ;
	}

	//1代表向上
	if(direction==1)
	{
		for (int j = 0; j < m; j++)
		{
			if(j!=0)
			{
				p-=cn*1;
			}
			
			*p=count;
			count+=1;
		}
			inputArrary(n-1,m,3,p+1,count);
	}

	//2代表向左
	if(direction==2)
	{
		for (int i = 0; i < n; i++)
		{
			if(i!=0)
			{
				p-=1;
			}
			
			*p=count;
			count+=1;
		}
			inputArrary(n,m-1,1,p-cn,count);

	}

	//3代表向右
	if(direction==3)
	{
		for (int i = 0; i < n; i++)
		{
			if(i!=0)
			{
				p+=1;
			}
			*p=count;
			count+=1;
		}
			inputArrary(n,m-1,4,p+cn,count);
		
	}

	//4代表向下	
	if(direction==4)
	{
		for (int j = 0; j < m; j++)
		{
			if(j!=0)
			{
				p+=cn*1;
			}
			
			*p=count;
			count+=1;
		}
			inputArrary(n-1,m,2,p-1,count);

	}
}